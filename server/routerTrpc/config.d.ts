import { Context } from '../context';
export declare const getGlobalConfig: ({ ctx, useAdmin }: {
    ctx?: Context;
    useAdmin?: boolean;
}) => Promise<{
    isAutoArchived?: boolean | undefined;
    autoArchivedDays?: number | undefined;
    isUseAI?: boolean | undefined;
    aiModelProvider?: any;
    aiApiKey?: any;
    aiApiEndpoint?: any;
    aiApiVersion?: any;
    aiModel?: any;
    isHiddenMobileBar?: boolean | undefined;
    toolbarVisibility?: any;
    isAllowRegister?: any;
    isCloseBackgroundAnimation?: boolean | undefined;
    customBackgroundUrl?: any;
    isOrderByCreateTime?: any;
    timeFormat?: any;
    smallDeviceCardColumns?: any;
    mediumDeviceCardColumns?: any;
    largeDeviceCardColumns?: any;
    textFoldLength?: number | undefined;
    objectStorage?: any;
    s3AccessKeyId?: any;
    s3AccessKeySecret?: any;
    s3Endpoint?: any;
    s3Bucket?: any;
    s3CustomPath?: any;
    s3Region?: any;
    localCustomPath?: any;
    embeddingModel?: any;
    embeddingDimensions?: number | undefined;
    embeddingTopK?: number | undefined;
    embeddingLambda?: number | undefined;
    embeddingScore?: number | undefined;
    excludeEmbeddingTagId?: number | undefined;
    language?: any;
    theme?: any;
    themeColor?: any;
    themeForegroundColor?: any;
    webhookEndpoint?: any;
    twoFactorEnabled?: boolean | undefined;
    twoFactorSecret?: string | undefined;
    spotifyConsumerKey?: string | undefined;
    spotifyConsumerSecret?: string | undefined;
    isCloseDailyReview?: boolean | undefined;
    maxHomePageWidth?: number | undefined;
    oauth2Providers?: {
        id: string;
        name: string;
        tokenUrl: string;
        userinfoUrl: string;
        clientId: string;
        clientSecret: string;
        icon?: string | undefined;
        wellKnown?: string | undefined;
        scope?: string | undefined;
        authorizationUrl?: string | undefined;
    }[] | undefined;
    isUseBlinkoHub?: boolean | undefined;
    embeddingApiEndpoint?: string | undefined;
    embeddingApiKey?: string | undefined;
    isHiddenNotification?: boolean | undefined;
    tavilyApiKey?: any;
    tavilyMaxResult?: any;
    isHideBlogImages?: boolean | undefined;
    isUseAiPostProcessing?: boolean | undefined;
    aiCommentPrompt?: string | undefined;
    aiTagsPrompt?: string | undefined;
    aiPostProcessingMode?: string | undefined;
    isUseHttpProxy?: boolean | undefined;
    httpProxyHost?: string | undefined;
    httpProxyPort?: number | undefined;
    httpProxyUsername?: string | undefined;
    httpProxyPassword?: string | undefined;
    aiSmartEditPrompt?: string | undefined;
    rerankModel?: string | undefined;
    rerankTopK?: number | undefined;
    rerankScore?: number | undefined;
    rerankUseEembbingEndpoint?: boolean | undefined;
}>;
export declare const configRouter: import("@trpc/server/unstable-core-do-not-import").BuiltRouter<{
    ctx: import("../context").User;
    meta: import("trpc-to-openapi").OpenApiMeta;
    errorShape: import("@trpc/server/unstable-core-do-not-import").DefaultErrorShape;
    transformer: true;
}, import("@trpc/server/unstable-core-do-not-import").DecorateCreateRouterOptions<{
    list: import("@trpc/server").TRPCQueryProcedure<{
        input: void;
        output: {
            isAutoArchived?: boolean | undefined;
            autoArchivedDays?: number | undefined;
            isUseAI?: boolean | undefined;
            aiModelProvider?: any;
            aiApiKey?: any;
            aiApiEndpoint?: any;
            aiApiVersion?: any;
            aiModel?: any;
            isHiddenMobileBar?: boolean | undefined;
            toolbarVisibility?: any;
            isAllowRegister?: any;
            isCloseBackgroundAnimation?: boolean | undefined;
            customBackgroundUrl?: any;
            isOrderByCreateTime?: any;
            timeFormat?: any;
            smallDeviceCardColumns?: any;
            mediumDeviceCardColumns?: any;
            largeDeviceCardColumns?: any;
            textFoldLength?: number | undefined;
            objectStorage?: any;
            s3AccessKeyId?: any;
            s3AccessKeySecret?: any;
            s3Endpoint?: any;
            s3Bucket?: any;
            s3CustomPath?: any;
            s3Region?: any;
            localCustomPath?: any;
            embeddingModel?: any;
            embeddingDimensions?: number | undefined;
            embeddingTopK?: number | undefined;
            embeddingLambda?: number | undefined;
            embeddingScore?: number | undefined;
            excludeEmbeddingTagId?: number | undefined;
            language?: any;
            theme?: any;
            themeColor?: any;
            themeForegroundColor?: any;
            webhookEndpoint?: any;
            twoFactorEnabled?: boolean | undefined;
            twoFactorSecret?: string | undefined;
            spotifyConsumerKey?: string | undefined;
            spotifyConsumerSecret?: string | undefined;
            isCloseDailyReview?: boolean | undefined;
            maxHomePageWidth?: number | undefined;
            oauth2Providers?: {
                id: string;
                name: string;
                tokenUrl: string;
                userinfoUrl: string;
                clientId: string;
                clientSecret: string;
                icon?: string | undefined;
                wellKnown?: string | undefined;
                scope?: string | undefined;
                authorizationUrl?: string | undefined;
            }[] | undefined;
            isUseBlinkoHub?: boolean | undefined;
            embeddingApiEndpoint?: string | undefined;
            embeddingApiKey?: string | undefined;
            isHiddenNotification?: boolean | undefined;
            tavilyApiKey?: any;
            tavilyMaxResult?: any;
            isHideBlogImages?: boolean | undefined;
            isUseAiPostProcessing?: boolean | undefined;
            aiCommentPrompt?: string | undefined;
            aiTagsPrompt?: string | undefined;
            aiPostProcessingMode?: string | undefined;
            isUseHttpProxy?: boolean | undefined;
            httpProxyHost?: string | undefined;
            httpProxyPort?: number | undefined;
            httpProxyUsername?: string | undefined;
            httpProxyPassword?: string | undefined;
            aiSmartEditPrompt?: string | undefined;
            rerankModel?: string | undefined;
            rerankTopK?: number | undefined;
            rerankScore?: number | undefined;
            rerankUseEembbingEndpoint?: boolean | undefined;
        };
    }>;
    update: import("@trpc/server").TRPCMutationProcedure<{
        input: {
            key?: any;
            value?: any;
        };
        output: {
            id: number;
            key: string;
            config?: any;
        };
    }>;
    setPluginConfig: import("@trpc/server").TRPCMutationProcedure<{
        input: {
            key: string;
            pluginName: string;
            value?: any;
        };
        output: any;
    }>;
    getPluginConfig: import("@trpc/server").TRPCQueryProcedure<{
        input: {
            pluginName: string;
        };
        output: any;
    }>;
}>>;
