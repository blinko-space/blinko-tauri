import { NoteType } from '@shared/lib/types';
import { z } from 'zod';
export declare const searchBlinkoTool: import("@mastra/core/tools").Tool<z.ZodObject<{
    content: z.ZodString;
    accountId: z.ZodNumber;
    page: z.ZodDefault<z.ZodNumber>;
    size: z.ZodDefault<z.ZodNumber>;
    orderBy: z.ZodDefault<z.ZodEnum<["asc", "desc"]>>;
    type: z.ZodDefault<z.ZodUnion<[z.ZodNativeEnum<typeof NoteType>, z.ZodLiteral<-1>]>>;
    isArchived: z.ZodOptional<z.ZodDefault<z.ZodUnion<[z.ZodBoolean, z.ZodNull]>>>;
    isRecycle: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    searchText: z.ZodOptional<z.ZodDefault<z.ZodString>>;
    withoutTag: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    withFile: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    withLink: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    isUseAiQuery: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    days: z.ZodOptional<z.ZodNumber>;
    hasTodo: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
}, "strip", z.ZodTypeAny, {
    orderBy: "asc" | "desc";
    type: NoteType | -1;
    content: string;
    accountId: number;
    page: number;
    size: number;
    isArchived?: boolean | null | undefined;
    isRecycle?: boolean | undefined;
    searchText?: string | undefined;
    withoutTag?: boolean | undefined;
    withFile?: boolean | undefined;
    withLink?: boolean | undefined;
    isUseAiQuery?: boolean | undefined;
    hasTodo?: boolean | undefined;
    days?: number | undefined;
}, {
    content: string;
    accountId: number;
    orderBy?: "asc" | "desc" | undefined;
    type?: NoteType | -1 | undefined;
    isArchived?: boolean | null | undefined;
    isRecycle?: boolean | undefined;
    page?: number | undefined;
    size?: number | undefined;
    searchText?: string | undefined;
    withoutTag?: boolean | undefined;
    withFile?: boolean | undefined;
    withLink?: boolean | undefined;
    isUseAiQuery?: boolean | undefined;
    hasTodo?: boolean | undefined;
    days?: number | undefined;
}>, undefined, import("@mastra/core").ToolExecutionContext<z.ZodObject<{
    content: z.ZodString;
    accountId: z.ZodNumber;
    page: z.ZodDefault<z.ZodNumber>;
    size: z.ZodDefault<z.ZodNumber>;
    orderBy: z.ZodDefault<z.ZodEnum<["asc", "desc"]>>;
    type: z.ZodDefault<z.ZodUnion<[z.ZodNativeEnum<typeof NoteType>, z.ZodLiteral<-1>]>>;
    isArchived: z.ZodOptional<z.ZodDefault<z.ZodUnion<[z.ZodBoolean, z.ZodNull]>>>;
    isRecycle: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    searchText: z.ZodOptional<z.ZodDefault<z.ZodString>>;
    withoutTag: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    withFile: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    withLink: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    isUseAiQuery: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    days: z.ZodOptional<z.ZodNumber>;
    hasTodo: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
}, "strip", z.ZodTypeAny, {
    orderBy: "asc" | "desc";
    type: NoteType | -1;
    content: string;
    accountId: number;
    page: number;
    size: number;
    isArchived?: boolean | null | undefined;
    isRecycle?: boolean | undefined;
    searchText?: string | undefined;
    withoutTag?: boolean | undefined;
    withFile?: boolean | undefined;
    withLink?: boolean | undefined;
    isUseAiQuery?: boolean | undefined;
    hasTodo?: boolean | undefined;
    days?: number | undefined;
}, {
    content: string;
    accountId: number;
    orderBy?: "asc" | "desc" | undefined;
    type?: NoteType | -1 | undefined;
    isArchived?: boolean | null | undefined;
    isRecycle?: boolean | undefined;
    page?: number | undefined;
    size?: number | undefined;
    searchText?: string | undefined;
    withoutTag?: boolean | undefined;
    withFile?: boolean | undefined;
    withLink?: boolean | undefined;
    isUseAiQuery?: boolean | undefined;
    hasTodo?: boolean | undefined;
    days?: number | undefined;
}>>>;
