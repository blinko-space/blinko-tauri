import { RouterOutput } from "../../server/routerTrpc/_app";
import { z } from "zod";
export type Note = Partial<NonNullable<RouterOutput['notes']['list'][0]>>;
export type Attachment = NonNullable<Note['attachments']>[0] & {
    size: any;
};
export type Tag = NonNullable<RouterOutput['tags']['list']>[0];
export type Config = NonNullable<RouterOutput['config']['list']>;
export type LinkInfo = NonNullable<RouterOutput['public']['linkPreview']>;
export type ResourceType = NonNullable<RouterOutput['attachments']['list']>[0];
export type Comment = NonNullable<RouterOutput['comments']['list']>;
export type InstalledPluginInfo = NonNullable<RouterOutput['plugin']['getInstalledPlugins']>[0];
export type Conversation = NonNullable<RouterOutput['conversation']['list']>[0];
export type Message = NonNullable<RouterOutput['message']['list']>[0];
export declare enum NoteType {
    'BLINKO' = 0,
    'NOTE' = 1
}
export type PublicUser = NonNullable<RouterOutput['users']['publicUserList']>[0];
export declare function toNoteTypeEnum(v?: number, fallback?: NoteType): NoteType;
export declare const ZUserPerferConfigKey: z.ZodUnion<[z.ZodLiteral<"textFoldLength">, z.ZodLiteral<"smallDeviceCardColumns">, z.ZodLiteral<"mediumDeviceCardColumns">, z.ZodLiteral<"largeDeviceCardColumns">, z.ZodLiteral<"timeFormat">, z.ZodLiteral<"isHiddenMobileBar">, z.ZodLiteral<"isOrderByCreateTime">, z.ZodLiteral<"language">, z.ZodLiteral<"theme">, z.ZodLiteral<"webhookEndpoint">, z.ZodLiteral<"toolbarVisibility">, z.ZodLiteral<"twoFactorEnabled">, z.ZodLiteral<"twoFactorSecret">, z.ZodLiteral<"themeColor">, z.ZodLiteral<"themeForegroundColor">, z.ZodLiteral<"isCloseDailyReview">, z.ZodLiteral<"maxHomePageWidth">, z.ZodLiteral<"isUseBlinkoHub">, z.ZodLiteral<"isHiddenNotification">, z.ZodLiteral<"isHideBlogImages">]>;
export declare const ZConfigKey: z.ZodUnion<[z.ZodLiteral<"isAutoArchived">, z.ZodLiteral<"autoArchivedDays">, z.ZodLiteral<"isUseAI">, z.ZodLiteral<"aiModelProvider">, z.ZodLiteral<"aiApiKey">, z.ZodLiteral<"aiApiEndpoint">, z.ZodLiteral<"aiApiVersion">, z.ZodLiteral<"aiModel">, z.ZodLiteral<"isAllowRegister">, z.ZodLiteral<"objectStorage">, z.ZodLiteral<"s3AccessKeyId">, z.ZodLiteral<"s3AccessKeySecret">, z.ZodLiteral<"s3Endpoint">, z.ZodLiteral<"s3Bucket">, z.ZodLiteral<"s3Region">, z.ZodLiteral<"s3CustomPath">, z.ZodLiteral<"localCustomPath">, z.ZodLiteral<"embeddingModel">, z.ZodLiteral<"embeddingDimensions">, z.ZodLiteral<"embeddingTopK">, z.ZodLiteral<"embeddingLambda">, z.ZodLiteral<"embeddingScore">, z.ZodLiteral<"excludeEmbeddingTagId">, z.ZodLiteral<"spotifyConsumerKey">, z.ZodLiteral<"spotifyConsumerSecret">, z.ZodLiteral<"isCloseBackgroundAnimation">, z.ZodLiteral<"customBackgroundUrl">, z.ZodLiteral<"oauth2Providers">, z.ZodLiteral<"embeddingApiEndpoint">, z.ZodLiteral<"embeddingApiKey">, z.ZodLiteral<"tavilyApiKey">, z.ZodLiteral<"tavilyMaxResult">, z.ZodLiteral<"isUseAiPostProcessing">, z.ZodLiteral<"aiCommentPrompt">, z.ZodLiteral<"aiTagsPrompt">, z.ZodLiteral<"aiPostProcessingMode">, z.ZodLiteral<"isUseHttpProxy">, z.ZodLiteral<"httpProxyHost">, z.ZodLiteral<"httpProxyPort">, z.ZodLiteral<"httpProxyUsername">, z.ZodLiteral<"httpProxyPassword">, z.ZodLiteral<"aiSmartEditPrompt">, z.ZodLiteral<"rerankModel">, z.ZodLiteral<"rerankTopK">, z.ZodLiteral<"rerankScore">, z.ZodLiteral<"rerankUseEembbingEndpoint">, z.ZodUnion<[z.ZodLiteral<"textFoldLength">, z.ZodLiteral<"smallDeviceCardColumns">, z.ZodLiteral<"mediumDeviceCardColumns">, z.ZodLiteral<"largeDeviceCardColumns">, z.ZodLiteral<"timeFormat">, z.ZodLiteral<"isHiddenMobileBar">, z.ZodLiteral<"isOrderByCreateTime">, z.ZodLiteral<"language">, z.ZodLiteral<"theme">, z.ZodLiteral<"webhookEndpoint">, z.ZodLiteral<"toolbarVisibility">, z.ZodLiteral<"twoFactorEnabled">, z.ZodLiteral<"twoFactorSecret">, z.ZodLiteral<"themeColor">, z.ZodLiteral<"themeForegroundColor">, z.ZodLiteral<"isCloseDailyReview">, z.ZodLiteral<"maxHomePageWidth">, z.ZodLiteral<"isUseBlinkoHub">, z.ZodLiteral<"isHiddenNotification">, z.ZodLiteral<"isHideBlogImages">]>, z.ZodAny]>;
export type ConfigKey = z.infer<typeof ZConfigKey>;
export declare const ZOAuth2ProviderSchema: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodString;
    icon: z.ZodOptional<z.ZodString>;
    wellKnown: z.ZodOptional<z.ZodString>;
    scope: z.ZodOptional<z.ZodString>;
    authorizationUrl: z.ZodOptional<z.ZodString>;
    tokenUrl: z.ZodString;
    userinfoUrl: z.ZodString;
    clientId: z.ZodString;
    clientSecret: z.ZodString;
}, "strip", z.ZodTypeAny, {
    name: string;
    id: string;
    tokenUrl: string;
    userinfoUrl: string;
    clientId: string;
    clientSecret: string;
    icon?: string | undefined;
    wellKnown?: string | undefined;
    scope?: string | undefined;
    authorizationUrl?: string | undefined;
}, {
    name: string;
    id: string;
    tokenUrl: string;
    userinfoUrl: string;
    clientId: string;
    clientSecret: string;
    icon?: string | undefined;
    wellKnown?: string | undefined;
    scope?: string | undefined;
    authorizationUrl?: string | undefined;
}>;
export declare const ZConfigSchema: z.ZodObject<{
    isAutoArchived: z.ZodOptional<z.ZodBoolean>;
    autoArchivedDays: z.ZodOptional<z.ZodNumber>;
    isUseAI: z.ZodOptional<z.ZodBoolean>;
    aiModelProvider: z.ZodOptional<z.ZodAny>;
    aiApiKey: z.ZodOptional<z.ZodAny>;
    aiApiEndpoint: z.ZodOptional<z.ZodAny>;
    aiApiVersion: z.ZodOptional<z.ZodAny>;
    aiModel: z.ZodOptional<z.ZodAny>;
    isHiddenMobileBar: z.ZodOptional<z.ZodBoolean>;
    toolbarVisibility: z.ZodOptional<z.ZodAny>;
    isAllowRegister: z.ZodOptional<z.ZodAny>;
    isCloseBackgroundAnimation: z.ZodOptional<z.ZodBoolean>;
    customBackgroundUrl: z.ZodOptional<z.ZodAny>;
    isOrderByCreateTime: z.ZodOptional<z.ZodAny>;
    timeFormat: z.ZodOptional<z.ZodAny>;
    smallDeviceCardColumns: z.ZodOptional<z.ZodAny>;
    mediumDeviceCardColumns: z.ZodOptional<z.ZodAny>;
    largeDeviceCardColumns: z.ZodOptional<z.ZodAny>;
    textFoldLength: z.ZodOptional<z.ZodNumber>;
    objectStorage: z.ZodOptional<z.ZodAny>;
    s3AccessKeyId: z.ZodOptional<z.ZodAny>;
    s3AccessKeySecret: z.ZodOptional<z.ZodAny>;
    s3Endpoint: z.ZodOptional<z.ZodAny>;
    s3Bucket: z.ZodOptional<z.ZodAny>;
    s3CustomPath: z.ZodOptional<z.ZodAny>;
    s3Region: z.ZodOptional<z.ZodAny>;
    localCustomPath: z.ZodOptional<z.ZodAny>;
    embeddingModel: z.ZodOptional<z.ZodAny>;
    embeddingDimensions: z.ZodOptional<z.ZodNumber>;
    embeddingTopK: z.ZodOptional<z.ZodNumber>;
    embeddingLambda: z.ZodOptional<z.ZodNumber>;
    embeddingScore: z.ZodOptional<z.ZodNumber>;
    excludeEmbeddingTagId: z.ZodOptional<z.ZodNumber>;
    language: z.ZodOptional<z.ZodAny>;
    theme: z.ZodOptional<z.ZodAny>;
    themeColor: z.ZodOptional<z.ZodAny>;
    themeForegroundColor: z.ZodOptional<z.ZodAny>;
    webhookEndpoint: z.ZodOptional<z.ZodAny>;
    twoFactorEnabled: z.ZodOptional<z.ZodBoolean>;
    twoFactorSecret: z.ZodOptional<z.ZodString>;
    spotifyConsumerKey: z.ZodOptional<z.ZodString>;
    spotifyConsumerSecret: z.ZodOptional<z.ZodString>;
    isCloseDailyReview: z.ZodOptional<z.ZodBoolean>;
    maxHomePageWidth: z.ZodOptional<z.ZodNumber>;
    oauth2Providers: z.ZodOptional<z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        name: z.ZodString;
        icon: z.ZodOptional<z.ZodString>;
        wellKnown: z.ZodOptional<z.ZodString>;
        scope: z.ZodOptional<z.ZodString>;
        authorizationUrl: z.ZodOptional<z.ZodString>;
        tokenUrl: z.ZodString;
        userinfoUrl: z.ZodString;
        clientId: z.ZodString;
        clientSecret: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        name: string;
        id: string;
        tokenUrl: string;
        userinfoUrl: string;
        clientId: string;
        clientSecret: string;
        icon?: string | undefined;
        wellKnown?: string | undefined;
        scope?: string | undefined;
        authorizationUrl?: string | undefined;
    }, {
        name: string;
        id: string;
        tokenUrl: string;
        userinfoUrl: string;
        clientId: string;
        clientSecret: string;
        icon?: string | undefined;
        wellKnown?: string | undefined;
        scope?: string | undefined;
        authorizationUrl?: string | undefined;
    }>, "many">>;
    isUseBlinkoHub: z.ZodOptional<z.ZodBoolean>;
    embeddingApiEndpoint: z.ZodOptional<z.ZodString>;
    embeddingApiKey: z.ZodOptional<z.ZodString>;
    isHiddenNotification: z.ZodOptional<z.ZodBoolean>;
    tavilyApiKey: z.ZodOptional<z.ZodAny>;
    tavilyMaxResult: z.ZodOptional<z.ZodAny>;
    isHideBlogImages: z.ZodOptional<z.ZodBoolean>;
    isUseAiPostProcessing: z.ZodOptional<z.ZodBoolean>;
    aiCommentPrompt: z.ZodOptional<z.ZodString>;
    aiTagsPrompt: z.ZodOptional<z.ZodString>;
    aiPostProcessingMode: z.ZodOptional<z.ZodString>;
    isUseHttpProxy: z.ZodOptional<z.ZodBoolean>;
    httpProxyHost: z.ZodOptional<z.ZodString>;
    httpProxyPort: z.ZodOptional<z.ZodNumber>;
    httpProxyUsername: z.ZodOptional<z.ZodString>;
    httpProxyPassword: z.ZodOptional<z.ZodString>;
    aiSmartEditPrompt: z.ZodOptional<z.ZodString>;
    rerankModel: z.ZodOptional<z.ZodString>;
    rerankTopK: z.ZodOptional<z.ZodNumber>;
    rerankScore: z.ZodOptional<z.ZodNumber>;
    rerankUseEembbingEndpoint: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    isAutoArchived?: boolean | undefined;
    autoArchivedDays?: number | undefined;
    isUseAI?: boolean | undefined;
    aiModelProvider?: any;
    aiApiKey?: any;
    aiApiEndpoint?: any;
    aiApiVersion?: any;
    aiModel?: any;
    isHiddenMobileBar?: boolean | undefined;
    toolbarVisibility?: any;
    isAllowRegister?: any;
    isCloseBackgroundAnimation?: boolean | undefined;
    customBackgroundUrl?: any;
    isOrderByCreateTime?: any;
    timeFormat?: any;
    smallDeviceCardColumns?: any;
    mediumDeviceCardColumns?: any;
    largeDeviceCardColumns?: any;
    textFoldLength?: number | undefined;
    objectStorage?: any;
    s3AccessKeyId?: any;
    s3AccessKeySecret?: any;
    s3Endpoint?: any;
    s3Bucket?: any;
    s3CustomPath?: any;
    s3Region?: any;
    localCustomPath?: any;
    embeddingModel?: any;
    embeddingDimensions?: number | undefined;
    embeddingTopK?: number | undefined;
    embeddingLambda?: number | undefined;
    embeddingScore?: number | undefined;
    excludeEmbeddingTagId?: number | undefined;
    language?: any;
    theme?: any;
    themeColor?: any;
    themeForegroundColor?: any;
    webhookEndpoint?: any;
    twoFactorEnabled?: boolean | undefined;
    twoFactorSecret?: string | undefined;
    spotifyConsumerKey?: string | undefined;
    spotifyConsumerSecret?: string | undefined;
    isCloseDailyReview?: boolean | undefined;
    maxHomePageWidth?: number | undefined;
    oauth2Providers?: {
        name: string;
        id: string;
        tokenUrl: string;
        userinfoUrl: string;
        clientId: string;
        clientSecret: string;
        icon?: string | undefined;
        wellKnown?: string | undefined;
        scope?: string | undefined;
        authorizationUrl?: string | undefined;
    }[] | undefined;
    isUseBlinkoHub?: boolean | undefined;
    embeddingApiEndpoint?: string | undefined;
    embeddingApiKey?: string | undefined;
    isHiddenNotification?: boolean | undefined;
    tavilyApiKey?: any;
    tavilyMaxResult?: any;
    isHideBlogImages?: boolean | undefined;
    isUseAiPostProcessing?: boolean | undefined;
    aiCommentPrompt?: string | undefined;
    aiTagsPrompt?: string | undefined;
    aiPostProcessingMode?: string | undefined;
    isUseHttpProxy?: boolean | undefined;
    httpProxyHost?: string | undefined;
    httpProxyPort?: number | undefined;
    httpProxyUsername?: string | undefined;
    httpProxyPassword?: string | undefined;
    aiSmartEditPrompt?: string | undefined;
    rerankModel?: string | undefined;
    rerankTopK?: number | undefined;
    rerankScore?: number | undefined;
    rerankUseEembbingEndpoint?: boolean | undefined;
}, {
    isAutoArchived?: boolean | undefined;
    autoArchivedDays?: number | undefined;
    isUseAI?: boolean | undefined;
    aiModelProvider?: any;
    aiApiKey?: any;
    aiApiEndpoint?: any;
    aiApiVersion?: any;
    aiModel?: any;
    isHiddenMobileBar?: boolean | undefined;
    toolbarVisibility?: any;
    isAllowRegister?: any;
    isCloseBackgroundAnimation?: boolean | undefined;
    customBackgroundUrl?: any;
    isOrderByCreateTime?: any;
    timeFormat?: any;
    smallDeviceCardColumns?: any;
    mediumDeviceCardColumns?: any;
    largeDeviceCardColumns?: any;
    textFoldLength?: number | undefined;
    objectStorage?: any;
    s3AccessKeyId?: any;
    s3AccessKeySecret?: any;
    s3Endpoint?: any;
    s3Bucket?: any;
    s3CustomPath?: any;
    s3Region?: any;
    localCustomPath?: any;
    embeddingModel?: any;
    embeddingDimensions?: number | undefined;
    embeddingTopK?: number | undefined;
    embeddingLambda?: number | undefined;
    embeddingScore?: number | undefined;
    excludeEmbeddingTagId?: number | undefined;
    language?: any;
    theme?: any;
    themeColor?: any;
    themeForegroundColor?: any;
    webhookEndpoint?: any;
    twoFactorEnabled?: boolean | undefined;
    twoFactorSecret?: string | undefined;
    spotifyConsumerKey?: string | undefined;
    spotifyConsumerSecret?: string | undefined;
    isCloseDailyReview?: boolean | undefined;
    maxHomePageWidth?: number | undefined;
    oauth2Providers?: {
        name: string;
        id: string;
        tokenUrl: string;
        userinfoUrl: string;
        clientId: string;
        clientSecret: string;
        icon?: string | undefined;
        wellKnown?: string | undefined;
        scope?: string | undefined;
        authorizationUrl?: string | undefined;
    }[] | undefined;
    isUseBlinkoHub?: boolean | undefined;
    embeddingApiEndpoint?: string | undefined;
    embeddingApiKey?: string | undefined;
    isHiddenNotification?: boolean | undefined;
    tavilyApiKey?: any;
    tavilyMaxResult?: any;
    isHideBlogImages?: boolean | undefined;
    isUseAiPostProcessing?: boolean | undefined;
    aiCommentPrompt?: string | undefined;
    aiTagsPrompt?: string | undefined;
    aiPostProcessingMode?: string | undefined;
    isUseHttpProxy?: boolean | undefined;
    httpProxyHost?: string | undefined;
    httpProxyPort?: number | undefined;
    httpProxyUsername?: string | undefined;
    httpProxyPassword?: string | undefined;
    aiSmartEditPrompt?: string | undefined;
    rerankModel?: string | undefined;
    rerankTopK?: number | undefined;
    rerankScore?: number | undefined;
    rerankUseEembbingEndpoint?: boolean | undefined;
}>;
export type GlobalConfig = z.infer<typeof ZConfigSchema>;
export declare const pluginInfoSchema: z.ZodObject<{
    name: z.ZodString;
    author: z.ZodString;
    url: z.ZodString;
    version: z.ZodString;
    minAppVersion: z.ZodString;
    displayName: z.ZodAny;
    description: z.ZodAny;
    readme: z.ZodAny;
    downloads: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    name: string;
    url: string;
    version: string;
    author: string;
    minAppVersion: string;
    downloads: number;
    description?: any;
    displayName?: any;
    readme?: any;
}, {
    name: string;
    url: string;
    version: string;
    author: string;
    minAppVersion: string;
    downloads: number;
    description?: any;
    displayName?: any;
    readme?: any;
}>;
export declare const installPluginSchema: z.ZodObject<Omit<{
    name: z.ZodString;
    author: z.ZodString;
    url: z.ZodString;
    version: z.ZodString;
    minAppVersion: z.ZodString;
    displayName: z.ZodAny;
    description: z.ZodAny;
    readme: z.ZodAny;
    downloads: z.ZodNumber;
}, "readme" | "downloads">, "strip", z.ZodTypeAny, {
    name: string;
    url: string;
    version: string;
    author: string;
    minAppVersion: string;
    description?: any;
    displayName?: any;
}, {
    name: string;
    url: string;
    version: string;
    author: string;
    minAppVersion: string;
    description?: any;
    displayName?: any;
}>;
export type PluginInfo = z.infer<typeof pluginInfoSchema>;
export type InstallPluginInput = z.infer<typeof installPluginSchema>;
export type RestoreResult = {
    type: 'success' | 'skip' | 'error';
    content?: string;
    error?: unknown;
    progress?: {
        current: number;
        total: number;
    };
};
export type ProgressResult = {
    type: 'success' | 'skip' | 'error' | 'info';
    content?: string;
    error?: unknown;
};
